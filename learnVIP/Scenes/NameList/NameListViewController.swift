//
//  NameListViewController.swift
//  learnVIP
//
//  Created by Nathaniel Andrian on 15/02/22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol NameListDisplayLogic: AnyObject
{
  func displayData(viewModel: NameListScene.Load.ViewModel)
}

class NameListViewController: UIViewController, NameListDisplayLogic
{
  var interactor: NameListBusinessLogic?
  var router: (NSObjectProtocol & NameListRoutingLogic & NameListDataPassing)?

  // MARK: Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
  {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder)
  {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: Setup
  
  private func setup()
  {
    let viewController = self
    let interactor = NameListInteractor()
    let presenter = NameListPresenter()
    let router = NameListRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }

  // MARK: Routing
  
  override func prepare(for segue: UIStoryboardSegue, sender: Any?)
  {
    if let scene = segue.identifier {
      let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
      if let router = router, router.responds(to: selector) {
        router.perform(selector, with: segue)
      }
    }
  }
    
  // MARK: Parameter
    let nameListView = NameListView()
    var arrayNameList = [NameList]()
      
  
  // MARK: View lifecycle
    
    override func loadView() {
        super.loadView()
        view = nameListView

    }
  
  override func viewDidLoad()
  {
    super.viewDidLoad()
      
    loadData()
    view.backgroundColor = .white
      nameListView.tableView.delegate = self
      nameListView.tableView.dataSource = self
      navigationItem.title = "Learn VIP"
  }
  
  // MARK: Do something
  
  //@IBOutlet weak var nameTextField: UITextField!
  
  func loadData()
  {
    let request = NameListScene.Load.Request()
    interactor?.doLoadData(request: request)
  }
  
  func displayData(viewModel: NameListScene.Load.ViewModel)
  {
      arrayNameList = viewModel.nameList
      DispatchQueue.main.async {
          self.nameListView.tableView.reloadData()
      }
      
  }
}

extension NameListViewController: UITableViewDelegate, UITableViewDataSource{
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return arrayNameList.count
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = UITableViewCell()
        cell.textLabel?.text  = arrayNameList[indexPath.row].name
        cell.selectionStyle = .none

        return cell
    }
    
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        router?.routeToNameListDetail(segue: nil)
        
    }
    
    
}
